syntax = "proto3";

package hvx.public.v1alpha1.proto;
option go_package = "public/v1alpha1";

import "google/protobuf/empty.proto";
import "google/api/annotations.proto";
import "google/api/field_behavior.proto";

service Public {
  rpc Health(google.protobuf.Empty) returns (HealthResponese) {
    option (google.api.http) = {
      get: "/health"
    };
  }

  // Get the instance details of the current instance.
  rpc GetPublicInstance(google.protobuf.Empty) returns (GetPublicInstanceResponse) {
    option (google.api.http) = {
      get: "/public/instances"
    };
  }

  rpc CreateAccounts(CreateAccountsRequest) returns (CreateAccountsResponse) {
    option (google.api.http) = {
      post: "/public/account/create",
      body: "*"
    };
  }

  rpc Authenticate(AuthenticateRequest) returns (AuthenticateResponse) {
    option (google.api.http) = {
      post: "/public/account/auth",
      body: "*"
    };
  }

  // Open API routing for the ActivityPub protocol.
  // ActivityPub https://www.w3.org/TR/activitypub/
  // HTTP API for public query of ActivityPub.
  // ActivityPub WebFinger https://github.com/w3c/activitypub/issues/194 .
  rpc GetWebfinger(GetWebfingerRequest) returns (GetWebfingerResponse) {
    option (google.api.http) = {
      get: "/.well-known/webfinger"
    };
  }

  // Get the actors in the activityPub protocol.
  // https://www.w3.org/TR/activitypub/#actor-objects
  rpc GetActor(GetActorRequest) returns (GetActorResponse) {
    option (google.api.http) = {
      get: "/u/{actor}"
    };
  }

}

message HealthResponese {
  string code = 1;
  string status = 2;
}

message GetPublicInstanceResponse {
  string code = 1;
  string version = 2;
  string build = 3;
  string maintainer = 4;
  string repo = 5;
  string host = 6;
}

message CreateAccountsRequest {
  string username = 1;
  string password = 2;
  string mail = 3;
  string publicKey = 4 [json_name = "public_key"];
}

message CreateAccountsResponse {
  string code = 1;
  string response = 2;
}

message AuthenticateRequest {
  string username = 1;
  string password = 2;
  string userAgent = 3 [json_name = "ua"];
}

message AuthenticateResponse {
  string code = 1;
  string token = 2;
  string deviceId = 3 [json_name = "device_id"];
}

message GetWebfingerRequest {
  string resource = 1;
}

message GetWebfingerResponse {
  message link {
    string rel = 1;
    string type = 2;
    string href = 3;
  }
  string subject = 1;
  repeated string aliases = 2;
  repeated link links = 3;
}

message GetActorRequest {
  string actor = 1 [(google.api.field_behavior) = REQUIRED];
}

message GetActorResponse {
  message PublicKey {
    string id = 1;
    string owner = 2;
    string publicKeyPem = 3;
  }

  message Icon {
    string type = 1;
    string url = 2;
    string mediaType = 3;
  }

  repeated string context = 1 [json_name = "@context"];
  string id = 2;
  string type = 3;
  string following = 4;
  string followers = 5;
  string inbox = 6;
  string outbox = 7;
  string preferredUsername = 8;
  string name = 9;
  string summary = 10;
  string url = 11;
  PublicKey publicKey = 12;
}