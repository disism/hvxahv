syntax = "proto3";

package hvx.api.v1alpha1.message.proto;
option go_package = "github.com/hvxahv/hvx/APIs/v1alpha1/message";

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/empty.proto";

service Messages {

  // AccessRegister registers and opens a matrix account using the username
  // and password of the account system. Registration will be performed to 
  // the self-hosted matrix.org home server using matrix.org's API. After 
  // registration is complete, the registered data is returned to the client
  // and the account system's Actor data is updated. The client should follow
  // the implementation specifications provided in the matrix.org documentation
  // to implement https://matrix.org/docs/develop.
  // matrix.org sdk https://matrix.org/sdks/
  rpc AccessRegister (AccessRegisterRequest) returns (AccessRegisterResponse) {
    option (google.api.http) = {
      post: "/api/v1/message/access/register",
      body: "*"
    };
  }

  // AccessLogin Sometimes you need to log in again when the token
  // is wrong or when you reauthorize.
  rpc AccessLogin (AccessLoginRequest) returns (AccessLoginResponse) {
    option (google.api.http) = {
      post: "/api/v1/message/access/login",
      body: "*"
    };
  }

  // AccessDelete Delete a matrix account by its account id.
  rpc AccessDelete (AccessDeleteRequest) returns (AccessDeleteResponse) {
    option (google.api.http) = {
      delete: "/api/v1/message/access",
      body: "*"
    };
  }

  // TODO - EDIT PASSWORD...
  // When the account system changes the password,
  // the password of the matrix should be changed at the same time.
}

message AccessRegisterRequest {
  string username = 2;
  string password = 3;
}

message AccessRegisterResponse {
  string code = 1;
  string status = 2;
  string accessToken = 3;
  string userId = 4;
  string baseUrl = 5;
  string deviceId = 6;
}

message AccessLoginRequest {
  string username = 2;
  string password = 3;
}

message AccessLoginResponse {
  string code = 1;
  string status = 2;
}

message AccessDeleteRequest {
  string password = 1;
}

message AccessDeleteResponse {
  string code = 1;
  string status = 2;
}