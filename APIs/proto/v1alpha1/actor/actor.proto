syntax = "proto3";

package hvx.api.v1alpha1.actor.proto;
option go_package = "github.com/hvxahv/hvx/APIs/v1alpha1/actor";

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/empty.proto";

service Actor {
  // IsExist returns true if the actor with the given name(PreferredUsername) exists.
  rpc IsExist (IsExistRequest) returns (IsExistResponse) {}

  // Create creates a new actor.
  rpc Create(CreateRequest) returns (CreateResponse) {}

  // Get returns the actor with the given name(PreferredUsername).
  rpc Get(GetRequest) returns (GetResponse) {}

  // Search returns the set of actors by the username.
  rpc Search (SearchRequest) returns (SearchResponse) {
    option (google.api.http) = {
      get: "/api/v1/search/{preferredUsername}"
    };
  }

  // EditActor Edits the actor profile.
  rpc Edit (EditRequest) returns (EditResponse) {
    option (google.api.http) = {
      put: "/api/v1/actor",
      body: "*"
    };
  }

  // Delete Delete the actor.
  rpc Delete (DeleteRequest) returns (DeleteResponse) {}

  // GetActorByUsername returns the actor by account username.
  rpc GetActorByUsername (GetActorByUsernameRequest) returns (ActorData) {}

  rpc GetActorByAddress (GetActorByAddressRequest) returns (ActorData) {}
}

message IsExistRequest {
  string PreferredUsername = 1;
}

message IsExistResponse {
  bool isExist = 1;
  string actorType = 2;
}

message CreateRequest {
  string preferredUsername = 1;
  string publicKey = 2;
  string actorType = 3;
}

message CreateResponse {
  string code = 1;
  int64 actorId = 2;
}

// GetRequest is the request for Get. It contains the actor id. 
message GetRequest {
  int64 actorId = 1;
}

message GetResponse {
  ActorData actor = 1;
}

// ActorData is the actor data. It contains the actor's public key, preferred username, and actor type.
message ActorData {
  int64 id = 1;
  string preferred_username = 2;
  string domain = 3;
  string avatar = 4;
  string name = 5;
  string summary = 6;
  string inbox = 7;
  string address = 8;
  string public_key = 9;
  string actor_type = 10;
  string isRemote = 11;
}

message SearchRequest {
  string preferredUsername = 1 [(google.api.field_behavior) = REQUIRED];
}

message SearchResponse {
  string code = 1;
  repeated ActorData actors = 2;
}

message GetActorByAddressRequest {
  string address = 1;
}

message GetActorByAddressResponse {
  ActorData actor = 1;
}

// The actor data to be updated.
message EditRequest {
  string name = 1;
  string avatar = 2;
  string summary = 3;
}

message EditResponse {
  string code = 1;
  string status = 2;
}

message DeleteRequest {
  int64 actorId = 1;
}

message DeleteResponse {
  string code = 1;
  string status = 2;
}

message GetActorByUsernameRequest {
  string username = 1;
}
