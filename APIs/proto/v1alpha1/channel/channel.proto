syntax = "proto3";

package hvx.api.v1alpha1.channel.proto;
option go_package = "github.com/hvxahv/hvx/APIs/v1alpha1/channel";

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/empty.proto";
import "proto/v1alpha1/actor/actor.proto";

service Channel {
  rpc CreateChannel(CreateChannelRequest) returns (CreateChannelResponse) {
    option (google.api.http) = {
      post: "/api/v1/channel",
      body: "*"
    };
  }

  rpc GetChannels(google.protobuf.Empty) returns (GetChannelsResponse) {
    option (google.api.http) = {
      get: "/api/v1/channel/channels",
    };
  }

  rpc DeleteChannel(DeleteChannelRequest) returns (DeleteChannelResponse) {
    option (google.api.http) = {
      delete: "/api/v1/channel",
      body: "*"
    };
  }

  rpc DeleteChannels(DeleteChannelsRequest) returns (DeleteChannelsResponse) {}
}

message CreateChannelRequest {
  string preferredUsername = 1;
}

message CreateChannelResponse {
  string code = 1;
  string status = 2;
}

message ChannelData {
  int64 channelId = 1;
  actor.proto.ActorData channel = 2;
}

message GetChannelsResponse {
  string code = 1;
  repeated ChannelData channels = 2;
}


message DeleteChannelRequest {
  int64 channelId = 1;
}

message DeleteChannelResponse {
  string code = 1;
  string status = 2;
}

message DeleteChannelsRequest {
  int64 accountId = 1;
}

message DeleteChannelsResponse {
  string code = 1;
  string status = 2;
}