syntax = "proto3";

package hvx.api.v1alpha1.auth.proto;
option go_package = "github.com/hvxahv/hvx/APIs/v1alpha1/auth";

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/empty.proto";

service Auth {
  // Verify authentication Login with a valid user.
  // After successful authentication. The client must be registered to the device table for functions such as TOKEN checksum, managing devices, etc.
  // So you must submit a UA identifier in addition to the username and password when logging in.
  // A valid Token is returned and must be carried in subsequent API access operations.
  // https://datatracker.ietf.org/doc/html/rfc9068
  rpc Authorization (AuthorizationRequest) returns (AuthorizationResponse) {
    option (google.api.http) = {
      post: "/auth",
      body: "*"
    };
  }

  // SetPublicKey unlike activitypub, his private key is inaccessible to the server.
  // The public key is used for hvxahv privacy-related asymmetric encryption key.
  rpc SetPublicKey(SetPublicKeyRequest) returns (SetPublicKeyResponse) {}
  rpc GetPublicKey(GetPublicKeyRequest) returns (GetPublicKeyResponse) {
    option (google.api.http) = {
      get: "/api/v1/auth/{accountId}",
    };
  }
  
  // D-H Diffieâ€“Hellman key exchange. 
  // https://www.rfc-editor.org/rfc/rfc2631.html
  rpc DHRequest (DHRequestData) returns (DHRequestResponse) {
    option (google.api.http) = {
      post: "/api/v1/dh/request"
    };
  }

  rpc SendDH (SendDHRequest) returns (SendDHResponse) {
    option (google.api.http) = {
      post: "/api/v1/dh"
    };
  }

  rpc GetPrivate (google.protobuf.Empty) returns (GetPrivateResponse) {
    option (google.api.http) = {
      get: "/api/v1/dh/private"
    };
  }
}

message AuthorizationRequest {
  string username = 1;
  string password = 2;
}

message AuthorizationResponse {
  string code = 1;
  string status = 2;
  int64 accountId = 3;
  string authorizationToken = 4;
  int64 actorId = 5;
  string mail = 6;
  int64 deviceId = 7;
}

message SetPublicKeyRequest {
  int64 accountId = 1;
  string publicKey = 2;
}

message SetPublicKeyResponse {
  string code = 1;
  string status = 2;
}

message GetPublicKeyRequest {
  string accountId = 1 [(google.api.field_behavior) = REQUIRED];
}

message GetPublicKeyResponse {
  string publicKey = 2;
}

message DHRequestData {
  int64 deviceId = 1;
  string publicKey = 2;
  string iv = 3;
}

message DHRequestResponse {
  string code = 1;
  string status = 2;
}

message SendDHRequest {
  int64 deviceId = 1;
  string publicKey = 2;
  string iv = 3;
  // Use the request iv encryption key .
  string private = 4;
}

message SendDHResponse {
  string code = 1;
  string status = 2;
}

message GetPrivateResponse {
  string code = 1;
  string private = 2;
}