syntax = "proto3";

package hvx.api.v1alpha1.auth.proto;
option go_package = "v1alpha1/auth";

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/empty.proto";

service Auth {
  // Verify Authentication Sign in with a valid user.
  // When the authentication is successful.
  // The client ID must be registered to the device table
  // So you must submit a UA identifier in addition to the username and password when you sign in.
  // A valid Token is returned,
  // This returned TOKEN must be carried in subsequent API access operations.
  // Returns a device id which is generated by the server as a hash using the uuid.
  // Returns a public key.
  rpc Authorization (AuthorizationRequest) returns (AuthorizationResponse) {
    option (google.api.http) = {
      post: "/auth",
      body: "*"
    };
  }

  rpc DHRequest (DHRequestData) returns (DHRequestResponse) {
    option (google.api.http) = {
      post: "/api/v1/dh/request"
    };
  }

  rpc SendDH (SendDHRequest) returns (SendDHResponse) {
    option (google.api.http) = {
      post: "/api/v1/dh"
    };
  }

  rpc GetPrivate (google.protobuf.Empty) returns (GetPrivateResponse) {
    option (google.api.http) = {
      get: "/api/v1/dh/private"
    };
  }
}

message AuthorizationRequest {
  string username = 1;
  string password = 2;
  string userAgent = 3 [json_name = "ua"];
}

message AuthorizationResponse {
  string code = 1;
  string status = 2;
  string id = 3;
  string authorization_token = 4;
  string actor_id = 5;
  string mail = 6;
  string deviceId = 7 [json_name = "device_id"];
}

message DHRequestData {
  string device_id = 1;
  string public_key = 2;
  string iv = 3;
}

message DHRequestResponse {
  string code = 1;
  string reply = 2;
}

message SendDHRequest {
  string device_id = 1;
  string public_key = 2;
  string iv = 3;
  // Use the request iv encryption key .
  string private = 4;
}

message SendDHResponse {
  string code = 1;
  string reply = 2;
}

message GetPrivateResponse {
  string code = 1;
  string private = 2;
}