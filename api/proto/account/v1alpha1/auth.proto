syntax = "proto3";

package hvxahv.v1alpha1.proto;
option go_package = "github.com/hvxahv/hvx/api/account/v1alpha";

service Auth {
  // Verify Authentication Sign in with a valid user.
  // When the authentication is successful.
  // The client ID must be registered to the device table
  // So you must submit a UA identifier in addition to the username and password when you sign in.
  // A valid Token is returned,
  // This returned TOKEN must be carried in subsequent API access operations.
  // Returns a device id which is generated by the server as a hash using the uuid.
  // Returns a public key.
  rpc Verify (VerifyRequest) returns (VerifyResponse) {}

  // GetPublicKeyByAccountUsername obtaining the public key by account name.
  // Verify the account.
  // Use this method when verifying the signature (ActivityPub) or when exchanging keys.
  rpc GetPublicKeyByAccountUsername (GetPublicKeyByAccountUsernameRequest) returns (GetPublicKeyByAccountUsernameResponse) {}
}

message VerifyRequest {
  string username = 1;
  string password = 2;
  string ua = 3;
}

message VerifyResponse {
  string code = 1;
  string reply = 2;
  string id = 3;
  string token = 4;
  string mail = 5;
  string device_id = 6;
  string public_key = 7;
}

message GetPublicKeyByAccountUsernameRequest {
  string username = 1;
}

message GetPublicKeyByAccountUsernameResponse {
  string code = 1;
  string public_key = 2;
}