syntax = "proto3";

package hvxahv.v1alpha1.proto;
option go_package = "github.com/hvxahv/hvxahv/api/account/v1alpha1";

service Accounts {
  // Create the Actor first, and then use the returned ActorID to create a unique account of the current instance account system.
  // The username in the account system is unique, and the Actor may have the same username in different instances.
  rpc Create (NewCreate) returns (Reply) {}

  //  Log in to the account system interface.
  rpc Verify (NewVerify) returns (VerifyReply) {}

  rpc GetActorByAccountUsername (NewAccountUsername) returns (ActorData) {}

  rpc GetAccountByUsername (NewAccountUsername) returns (AccountData) {}

  rpc DeleteAccount (NewAccountDelete) returns (Reply) {}

  // EditAccountUsername The account username will be updated with the account ID, along with the Actor preferred username.
  rpc EditAccountUsername (NewEditAccountUsername) returns (Reply) {}
  rpc EditAccountPassword (NewEditAccountPassword) returns (Reply) {}
  //  rpc Update (AccountData) returns (AccountsReply) {}
  //  rpc UpdatePassword (UpdatePasswordData) returns (AccountsReply) {}
  //  rpc UpdateUsername (UpdateUsernameData) returns (AccountsReply) {}
  //
  //  // Delete Delete the specified account by user name.
  //  rpc Delete (DeleteData) returns (AccountsReply) {}
  //
  //  rpc GetAccountsByUsername(AccountUsername) returns (AccountData) {}
  //  rpc FindActorByAccountsUsername(AccountUsername) returns (ActorData) {}
  //  rpc FindActorByID(ActorID) returns (ActorData) {}
  //
  //  // SignIn ...
  //  rpc SignIn (AuthData) returns (SignInReply) {}
}

message AccountData {
  string account_id = 1;
  string username = 2;
  string mail = 3;
  string password = 4;
  string actor_id = 5;
  string is_private = 6;
}

message ActorData {
  string id = 1;
  string preferred_username = 2;
  string domain = 3;
  string avatar = 4;
  string name = 5;
  string summary = 6;
  string inbox = 7;
  string address = 8;
  string public_key = 9;
  string actor_type = 10;
  string is_remote = 11;
}

message Reply {
  string code = 1;
  string reply = 2;
}

message NewCreate {
  string username = 1;
  string mail = 2;
  string password = 3;
  string publicKey = 4;
}

message NewVerify {
  string username = 1;
  string password = 2;
  string ua = 3;
}

message VerifyReply {
  string code = 1;
  string id = 2;
  string reply = 3;
  string token = 4;
  string mail = 5;
  string device_id = 6;
  string public_key = 7;
}

message NewAccountUsername {
  string username = 1;
}

message NewAccountDelete {
  string username = 1;
  string password = 2;
}

message NewEditAccountUsername {
  string id = 1;
  string username = 2;
}

message NewEditAccountPassword {
  string id = 1;
  string password = 2;
}