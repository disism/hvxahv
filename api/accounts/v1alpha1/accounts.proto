syntax = "proto3";

package hvxahv.v1alpha1.proto;
option go_package = "github.com/disism/hvxahv/api/accounts/v1alpha1";

// Accounts List of account gRPC service.
service Accounts {
  // New Create an account through the NewAccountData data structure.
  rpc New (NewAccountData) returns (AccountsReply) {}

  // Update Update the account through AccountData data.
  rpc Update (AccountData) returns (AccountsReply) {}

  // Delete Delete the specified account by user name.
  rpc Delete (AuthData) returns (AccountsReply) {}

  // Find Query specified user data by username.
  rpc Find (NewAccountByName) returns (AccountData) {}

  // Login ...
  rpc Login (AuthData) returns (AuthReply) {}

  //  New follower.
  rpc NewFollow (FollowersData) returns (AccountsReply) {}
}


// AccountsData List of all data of the account service
message AccountData {
  string username = 1;
  string password = 2;
  string mail = 3;
  string avatar = 4;
  string bio = 5;
  string name = 6;
  string phone = 7;
  bool   isPrivate = 8;
  int32  follower = 9;
  int32  following = 10;
  int32  friend = 11;
  string privateKey = 12;
  string publicKey = 13;
}

// AccountsReply The return value, code and message of the Accounts operation.
message AccountsReply {
  int32  code = 1;
  string message = 2;
}

// AccountByName Functions operated by username.
message NewAccountByName{
  string username = 1;
}

// NewAccountData Data needed to create a new account.
message NewAccountData {
  string username = 1;
  string password = 2;
  string mail = 3;
}

// AuthReply Account login, use email and password.
message AuthData {
  string mail = 1;
  string password = 2;
}

// AuthReply The data returned by the login account needs to return a token.
message AuthReply {
  string username = 1;
  string uuid = 2;
}

message FollowersData {
  string follower = 1;
  string following = 2;
}