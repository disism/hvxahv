syntax = "proto3";

package hvxahv.v1alpha1.proto;
option go_package = "github.com/hvxahv/hvxahv/api/device/v1alpha1";

service Devices {
  // Whether there is a device hash.
  rpc IsExist (NewDeviceHash) returns (IsDeviceExistReply) {}
  rpc Create(NewDeviceCreate) returns (DeviceCreateReply) {}
  rpc GetDevicesByAccountID (NewDeviceAccountID) returns (DevicesData) {}
  rpc GetDeviceByID (NewDeviceID) returns (DeviceData) {}
  rpc GetDeviceByHash (NewDeviceHash) returns (DeviceData) {}
  rpc DeleteAllByAccountID (NewDeviceAccountID) returns (DeviceReply) {}
  rpc Delete (NewDeviceID) returns (DeviceReply) {}
  rpc DeleteByDeviceHash (NewDeviceHash) returns (DeviceReply) {}
}

message NewDeviceAccountID {
  string account_id = 1;
}

message NewDeviceID {
  string id = 1;
}

message NewDeviceCreate {
  string account_id = 1;
  string ua = 2;
  string hash = 3;
}

message DeviceCreateReply {
  string device_id = 1;
  string public_key = 2;
}

message DeviceReply {
  string code = 1;
  string reply = 2;
}

message DeviceData {
  string id = 1;
  string account_id = 2;
  string device = 3;
  string hash = 4;
  string private_key = 5;
  string public_key = 6;
}

message DevicesData {
  string code = 1;
  repeated DeviceData devices = 2;
}

message NewDeviceHash {
  string hash = 1;
}

message IsDeviceExistReply {
  bool is_exist = 2;
}